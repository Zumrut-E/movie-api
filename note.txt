Directions:

Using the terminal, create a “documentation.html” file within your “movie_api” directory. 
This will contain instructions for other developers on how to use the API you’re building. 
You can add whatever instructions you think might be helpful, and you'll continue 
to update this document as you go along. 
For now, let’s include a title for your API, 
as well as a basic intro paragraph on what the API does. 
You can refer back to the Achievement 2 project brief (PDF) at this stage as needed.
Within your project directory, create a “server.js” file that 
imports the http module and listens for requests on port 8080.
Now, import the url module at the top of your “server.js” file.
For incoming requests, parse the request.url to determine if the URL contains the word “documentation” 
(request is one of the objects passed to createServer's callback function; 
it contains the request data, such as the requested URL). 
If it does, return the “documentation.html” file to the user; otherwise return the “index.html” file. For a real-time glance at what this should look like, refer to this GIF demonstrating how to start up the server and navigate to different pages.
Create a “log.txt” file in your project directory.
For all requests coming in to your “server.js” file, use the fs module to log both the request URL and a 
timestamp to the “log.txt” file. For another demonstration of what this should look like, refer to this GIF of checking the log file after navigating to each page.
Your “movie-api” project directory should have the following:
A “test.js” file
A “index.html” file
A “documentation.html” file
A “server.js” file. It imports the http module, the fs module and the url module
A “log.txt” file